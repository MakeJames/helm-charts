apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgres.fullname" . | quote }}
  labels:
    {{- include "postgres.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "postgres.fullname" . | quote }}
  template:
    metadata:
      labels:
        app: {{ include "postgres.fullname" . | quote}}
    spec:
      replicas: {{ .Values.replicaCount }}
      volumes:
        - name: {{ include "postgres.volume.name" . | quote }}
          persistentVolumeClaim:
            claimName: {{ include "postgres.volume.claimName" . | quote }}
      containers:
        - name: {{ include "postgres.fullname" . | quote }}
          image: {{ include "postgres.image" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
          {{- with .Values.resources }}
            requests:
              memory: {{ .requests.memory }}
              cpu: {{ .requests.cpu }}
            limits:
              memory: {{ .limits.memory }}
              cpu: {{ .limits.cpu }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.service.port.port }}
          env:
            {{- range $key, $val := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
            {{- end }}
          volumeMounts:
            - name: {{ include "postgres.volume.name" . | quote }}
              mountPath: {{ .Values.persistence.data.mountPath | quote }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    {{- end -}}
